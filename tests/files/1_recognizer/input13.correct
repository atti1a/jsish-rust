identifier: LCMCalculator
symbol: .
identifier: prototype
symbol: =
symbol: {
identifier: constructor
symbol: :
identifier: LCMCalculator
symbol: ,
identifier: gcd
symbol: :
keyword: function
symbol: (
symbol: )
symbol: {
keyword: var
identifier: a
symbol: =
identifier: Math
symbol: .
identifier: abs
symbol: (
keyword: this
symbol: .
identifier: a
symbol: )
symbol: ,
identifier: b
symbol: =
identifier: Math
symbol: .
identifier: abs
symbol: (
keyword: this
symbol: .
identifier: b
symbol: )
symbol: ,
identifier: t
symbol: ;
keyword: if
symbol: (
identifier: a
symbol: <
identifier: b
symbol: )
symbol: {
identifier: t
symbol: =
identifier: b
symbol: ;
identifier: b
symbol: =
identifier: a
symbol: ;
identifier: a
symbol: =
identifier: t
symbol: ;
symbol: }
keyword: while
symbol: (
identifier: b
symbol: !=
symbol: =
number: 0
symbol: )
symbol: {
identifier: t
symbol: =
identifier: b
symbol: ;
identifier: b
symbol: =
identifier: a
symbol: %
identifier: b
symbol: ;
identifier: a
symbol: =
identifier: t
symbol: ;
symbol: }
keyword: this
symbol: [
string: "gcd"
symbol: ]
symbol: =
keyword: function
symbol: (
symbol: )
symbol: {
keyword: return
identifier: a
symbol: ;
symbol: }
symbol: ;
keyword: return
identifier: a
symbol: ;
symbol: }
symbol: ,
string: "lcm"
symbol: :
keyword: function
symbol: (
symbol: )
symbol: {
keyword: var
identifier: lcm
symbol: =
keyword: this
symbol: .
identifier: a
symbol: /
keyword: this
symbol: .
identifier: gcd
symbol: (
symbol: )
symbol: *
keyword: this
symbol: .
identifier: b
symbol: ;
keyword: this
symbol: .
identifier: lcm
symbol: =
keyword: function
symbol: (
symbol: )
symbol: {
keyword: return
identifier: lcm
symbol: ;
symbol: }
symbol: ;
keyword: return
identifier: lcm
symbol: ;
symbol: }
symbol: ,
identifier: toString
symbol: :
keyword: function
symbol: (
symbol: )
symbol: {
keyword: return
string: "LCMCalculator: a = "
symbol: +
keyword: this
symbol: .
identifier: a
symbol: +
string: ", b = "
symbol: +
keyword: this
symbol: .
identifier: b
symbol: ;
symbol: }
symbol: }
symbol: ;
end-of-file
